# Author    : Caleb
# Date      : 12th Feb 2022
# Modified  : 12th Feb 2022

# The factorial function says to multiply all whole numbers from our chosen number down to 1
# Paramters 	: INT - factor
# Return		: INT - result
proc std_factorial(factor : int) -> int {
	factor factor factor bind | idx, current, result |

	result 0 = if {
		1 bind | result |
	}

	factor 1 > loop {
		current 1 - bind | current |
		current result * bind | result |
		idx 1 - bind | idx |
		idx 1 >
	}
	result
}

# Math power of
# Parameters	: INT, INT - base, power
# Return		: INT - result
proc std_pow(base, pow : int) -> int {
	base 0 bind | idx, result |

	# Loop to get the result of the power
	true loop {
		result base * bind | result |
		idx 1 + bind | idx |
		idx pow 1 - <
	}
	# Return the result
	result
}

# Math power of
# Parameters	: FLOAT, INT - base, power
# Return		: FLOAT - result
proc std_pow(base : float, pow : int) -> float {
	base 0 bind | idx, result |

	# Loop to get the result of the power
	true loop {
		result base * bind | result |
		idx 1 + bind | idx |
		idx pow 1 - <
	}
	# Return the result
	result
}


proc std_sin(degrees : float, places : int) -> float {
	0.0 0 bind | idx, result |

	idx places < loop {
		idx 1 @negate |!2| !std_pow
		idx 1 + 2 *
		degrees *

		idx 1 + 2 * |!1| !std_factorial
		/

		result + bind | result |
		idx places <
	}

	result
}

# Wraps the native @str_cmp and provides a boolean
# Parameters	: STRING, STRING - src1, src2
# Return		: BOOL - result
proc std_str_cmp(str_a, str_b : string) -> bool {
	str_a str_b @str_cmp
}

# Wraps the native @stoi and provides an integer
# Parameters	: STRING - src
# Return		: INT - value (0 default)
proc std_stoi(str : string) -> int {
	str @stoi bind | value | drop

	# Create a default int
	value true @kind_cmp if {
		# Drop both boolean values
		# true + false generated by a bad stoi
		# Return 0 as default
		2 @drop_n 0
	} else { 
		# Drop the true
		drop 
	}
}

# Wraps the native @stof and provides a float
# Parameters	: STRING - src
# Return		: FLOAT - value (0 default)
proc std_stof(str : string) -> float {
	str @stof bind | value | drop

	# Create a default float
	value true @kind_cmp if {
		# Drop both boolean values
		# true + false generated by a bad stof
		# Return 0 as default
		2 @drop_n 0.0
	} else { 
		# Drop the true
		drop 
	}
}


# Dummy main
proc main() -> void {
	'This is a library, there is nothing to run :^)' println drop
}